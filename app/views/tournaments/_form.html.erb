<%= form_for(@tournament,
             url: (@tournament.game.nil? ? new_tournament_path : tournaments_path),
             method: (@tournament.game.nil? ? "get" : "post")) do |f| %>
	<%= render "common/error_messages", :target => @tournament %>

	<fieldset><legend>Attributes</legend>
	<p>
		<%= f.label :game_id, "Select a game type" %>
		<%= f.select(:game_id, Game.all.map{|game| [game.name, game.id]}) %>
	</p>

	<% if @tournament.game.nil? %>
		<%= submit_tag("Select", :class => "btn") %>
		</fieldset>
	<% else %>

	<p>
		<%= f.label :name %>
		<%= f.text_field :name %>
	</p>
	
	<table><tbody>
		<tr>
			<td></td>
			<th>Minimum</th>
			<th>Maximum</th></tr>
		<tr>
			<th>Players per team</th>
			<td><%= f.text_field(:min_players_per_team, type: :number, min: 1) %></td>
			<td><%= f.text_field(:max_players_per_team, type: :number, min: 1) %></td>
		</tr>
		<tr>
			<th>Teams per match</th>
			<td><%= f.text_field(:min_teams_per_match, type: :number, min: 1) %></td>
			<td><%= f.text_field(:max_teams_per_match, type: :number, min: 1) %></td>
		</tr>
	</tbody></table>

	<p>
		<%= f.label :scoring_method %>
		<%= f.select(:scoring_method, @tournament.scoring_methods.map{|method| [method.humanize, method]}) %>
	</p>

	<p>
		<%= f.label :sampling_method %>
		<%= f.select(:sampling_method, @tournament.sampling_methods.map{|method| [method.humanize, method]}) %>
	</p>

	</fieldset>

	<fieldset><legend>Settings</legend>
	<%= f.fields_for :settings do |setting_fields| %>
		<% (@tournament.settings.empty? ? @tournament.game.settings : @tournament.settings).each do |setting| %><p>
			<% name = setting.name.parameterize.underscore %>
			<%= setting_fields.label name %>
			<br>
			<% case setting.vartype %>
			<% when 0 %>
				<%= setting_fields.text_field( name ) %>
			<% when 1 %>
				<%= setting_fields.text_area( name ) %>
			<% when 2 %>
				<ul>
				<% setting.type_opt.split(',').each do |option|%>
					<li><label><%= setting_fields.radio_button( name, option ) %><%= option %></label></li>
				<% end %>
				</ul>
			<% when 3 %>
				<ul>
				<% setting.type_opt.split(',').each do |option|%>
					<li><label><%= check_box_tag(name, value = option, checked = false, options = {}) %><%= option %></label></li>
				<% end %>
				</ul>
			<% when 4 %>
				<%= setting_fields.radio_button( name, "true" ) %> True
				<%= setting_fields.radio_button( name, "false" ) %> False
			<% when 5 %>
				<%= setting_fields.select( name, setting.type_opt.split(',') ) %>
			<% end %>
		</p><% end %>
	<% end %>
	</fieldset>

	<%= f.fields_for :stages do |stages_fields| %><fieldset><legend>Stages</legend>
		<label for="num_stages">Number of tournament stages</label>
		<input type="number" name="num_stages" min="1" value="<%= params[:num_stages].to_i %>">
		<% for i in 1..(params[:num_stages].to_i) do %>
			<%= stages_fields.fields_for i.to_s do |stage_fields| %><fieldset><legend>Stage <%= i %></legend>
				<%= stage_fields.label :scheduling_method %>
				<%= stage_fields.select(:scheduling_method, @tournament.scheduling_methods.map{|method| [method.humanize, method]}) %>
				<%= stage_fields.label :seeding_method %>
				<%= stage_fields.select(:seeding_method, @tournament.seeding_methods.map{|method| [method.humanize, method]}) %>
			</fieldset><% end %>
		<% end %>
	</fieldset><% end %>

	<%= f.submit %>

	<%# render 'stages' %>
	<% end %>
<% end %>
